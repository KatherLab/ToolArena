name: abrsp_vote_predictor # Name of the task. Should correspond to the name of the folder.
repo:
  name: ABRS-P # Name of the repository.
  url: "https://github.com/qinghezeng/ABRS-P" # URL of the repository.
  commit: 8ba3a7c # Commit hash of the repository (optional, default is the latest commit). It is recommended to use a specific commit to ensure reproducibility.
  # branch: main # Branch of the repository (optional)
  env: []
    # Here, you can specify environment variables that should be available for installing the repository or running the task.
    # The format is key: value, where value is a string that can include variables from the local environment.
    # You may also leave this empty if the repository does not require any tokens/secrets.
    # HF_TOKEN: "${env:HF_TOKEN}"  # Example environment variable that sets HF_TOKEN to the local environment variable HF_TOKEN.
papers: [zeng2023abrsp] # List of papers that this task is based on. Papers are specified by their IDs in the papers.bib file.
category: pathology # Category of the task.
requires: cuda # If your task requires a GPU, change this to "cuda".
description: To predict High or Low sensitivity to atezobev treatment using the ABRS-P biomarker model on externally treated patients, apply a fixed threshold to stratify the continuous model output (a non-negative score) into two groups for each fold, and then aggregate predictions across all ten folds using majority voting. # Description of the task. This should be 1-3 sentences in length, explaining to the LLM what this tool should do.
description: >-
  Predict binary sensitivity (High vs Low) to atezolizumab-bevacizumab with the 10-fold ABRS-P model: for each sample keep the ordered list of ten raw scores, apply the matching thresholds, count “High” votes, and assign High if ≥ 5, else Low (ties impossible).
arguments:
  - name: dataset_csv_file
    description: >-
      CSV that was used to train the checkpoints, listing every slide/patient to evaluate; must include `slide_id` and the column named by `label_col` (values are loaded but not used for prediction).
    type: str
  - name: label_col
    description: >-
      Name of the expression column in `dataset_csv_file`, required only to satisfy the dataset API.
    type: str
  - name: dataset_splits_dir
    description: >-
      Directory with `splits_0.csv` … `splits_9.csv`; rows marked as `test` define which samples are processed for each fold.
    type: str
  - name: checkpoints_dir
    description: >-
      Directory containing the ten fold checkpoints `s_0_checkpoint.pt` … `s_9_checkpoint.pt`.
    type: str
  - name: features_dir
    description: >-
      Folder holding one CTransPath feature tensor (`.pt`) per `slide_id`.
    type: str
  - name: fixed_thresholds
    description: >-
      Ordered list of exactly ten floats used as fold-specific cut-offs to convert continuous scores to High/Low.
    type: list
  - name: output_predictions_file
    description: >-
      Destination CSV with columns `sample_id`, `fold_0` … `fold_9`, and the majority-voted `final`.
    type: str
returns:
  - name: predictions
    description: >-
      List of dictionaries mirroring the rows of the output CSV (`sample_id`, `fold_0` … `fold_9`, `final`).
    type: list
example:
  # Below, we define an example invocation of the task, i.e. a specific input to the tool.
  # This section is required, and it consists of "arguments" and "mount" (see below).
  arguments:
    # For each input argument, specify the value to be used for the example invocation.
    # You must specify a "name" and a "value" for all arguments that are defined in the "arguments" section.
    - name: dataset_csv_file
      value: /mount/input/dataset_csv/myscore_s1.csv
    - name: label_col
      value: my_score
    - name: dataset_splits_dir
      value: /mount/input/dataset_splits/s1_100
    - name: checkpoints_dir
      value: /mount/input/10_fold_checkpoints
    - name: features_dir
      value: /mount/input/TCGA-LIHC-cTransPath-features-20x
    - name: fixed_thresholds
      value: [6.32, 5.14, 6.79, 5.88, 6.01, 5.49, 6.27, 5.62, 6.66, 5.36]
    - name: output_predictions_file
      value: /mount/output/predictions.csv
  mount:
    - source: dataset_csv
      target: dataset_csv
    - source: dataset_splits
      target: dataset_splits
    - source: 10_fold_checkpoints
      target: 10_fold_checkpoints
    - source: TCGA-LIHC-cTransPath-features-20x
      target: TCGA-LIHC-cTransPath-features-20x
test_invocations:
  - name: s2
    arguments:
      - name: dataset_csv_file
        value: /mount/input/dataset_csv/myscore_s2.csv
      - name: label_col
        value: my_score
      - name: dataset_splits_dir
        value: /mount/input/dataset_splits/s2_100
      - name: checkpoints_dir
        value: /mount/input/10_fold_checkpoints
      - name: features_dir
        value: /mount/input/TCGA-LIHC-cTransPath-features-20x
      - name: fixed_thresholds
        value: [6.32, 5.14, 6.79, 5.88, 6.01, 5.49, 6.27, 5.62, 6.66, 5.36]
      - name: output_predictions_file
        value: /mount/output/predictions.csv
    mount:
      - source: dataset_csv
        target: dataset_csv
      - source: dataset_splits
        target: dataset_splits
      - source: 10_fold_checkpoints
        target: 10_fold_checkpoints
      - source: TCGA-LIHC-cTransPath-features-20x
        target: TCGA-LIHC-cTransPath-features-20x
  - name: s3
    arguments:
      - name: dataset_csv_file
        value: /mount/input/dataset_csv/myscore_s3.csv
      - name: label_col
        value: my_score
      - name: dataset_splits_dir
        value: /mount/input/dataset_splits/s3_100
      - name: checkpoints_dir
        value: /mount/input/10_fold_checkpoints
      - name: features_dir
        value: /mount/input/TCGA-LIHC-cTransPath-features-20x
      - name: fixed_thresholds
        value: [6.32, 5.14, 6.79, 5.88, 6.01, 5.49, 6.27, 5.62, 6.66, 5.36]
      - name: output_predictions_file
        value: /mount/output/predictions.csv
    mount:
      - source: dataset_csv
        target: dataset_csv
      - source: dataset_splits
        target: dataset_splits
      - source: 10_fold_checkpoints
        target: 10_fold_checkpoints
      - source: TCGA-LIHC-cTransPath-features-20x
        target: TCGA-LIHC-cTransPath-features-20x
  - name: s4
    arguments:
      - name: dataset_csv_file
        value: /mount/input/dataset_csv/myscore_s4.csv
      - name: label_col
        value: my_score
      - name: dataset_splits_dir
        value: /mount/input/dataset_splits/s4_100
      - name: checkpoints_dir
        value: /mount/input/10_fold_checkpoints
      - name: features_dir
        value: /mount/input/TCGA-LIHC-cTransPath-features-20x
      - name: fixed_thresholds
        value: [6.32, 5.14, 6.79, 5.88, 6.01, 5.49, 6.27, 5.62, 6.66, 5.36]
      - name: output_predictions_file
        value: /mount/output/predictions.csv
    mount:
      - source: dataset_csv
        target: dataset_csv
      - source: dataset_splits
        target: dataset_splits
      - source: 10_fold_checkpoints
        target: 10_fold_checkpoints
      - source: TCGA-LIHC-cTransPath-features-20x
        target: TCGA-LIHC-cTransPath-features-20x
