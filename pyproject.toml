[project]
name = "toolarena"
version = "0.1.0"
authors = [
    { name = "Georg WÃ¶lflein", email = "georg@woelflein.de" },
]
description = "Benchmark for LLM tool creation"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "bibtexparser>=2.0.0b8",
    "datasets>=3.5.0",
    "docker>=7.1.0",
    "fastapi>=0.115.11",
    "httpx>=0.28.1",
    "loguru>=0.7.3",
    "mcp[cli]>=1.4.1",
    "numpy>=2.2.4",
    "pydantic-settings>=2.8.1",
    "pytest>=8.3.5",
    "pytest-lazy-fixtures>=1.1.2",
    "python-dotenv>=1.0.1",
    "pyyaml>=6.0.2",
    "rich>=13.9.4",
    "tenacity>=9.0.0",
    "typer>=0.15.2",
    "uvicorn>=0.34.0",
]


[tool.ruff]
src = ["toolarena"]

[tool.ruff.lint]
select = ["E", "F", "I001"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"
testpaths = ["tests"]  # ["tests", "tasks"]
pythonpath = ["."]

[dependency-groups]
dev = [
    "ipykernel>=6.29.5",
    "pillow>=11.2.1",
    "pytest-asyncio>=0.26.0",
    "types-docker>=7.1.0.20241229",
    "types-pyyaml>=6.0.12.20241230",
]
benchmark = [
    "h5py>=3.13.0",
    "nibabel>=5.3.2",
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]  # Ignore `F401` (import violations) in all `__init__.py` files
"*.py" = ["E501"]  # Ignore `E501` (line too long) in all files
"*.ipynb" = ["E501"]  # Ignore `E501` (line too long) in all notebooks

[project.scripts]
toolarena = "toolarena.__main__:app"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
